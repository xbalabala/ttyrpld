Index: freebsd_sys-6.2/kern/tty.c
===================================================================
--- freebsd_sys-6.2.orig/kern/tty.c
+++ freebsd_sys-6.2/kern/tty.c
@@ -112,6 +112,11 @@ __FBSDID("$FreeBSD: src/sys/kern/tty.c,v
 #include <vm/pmap.h>
 #include <vm/vm_map.h>
 
+#include <sys/km_rpldev.h>
+int (*rpl_read)(const char *, int, struct tty *)  = NULL;
+int (*rpl_write)(const char *, int, struct tty *) = NULL;
+int (*rpl_lclose)(struct tty *)                   = NULL;
+
 MALLOC_DEFINE(M_TTYS, "ttys", "tty data structures");
 
 long tk_cancc;
@@ -316,6 +321,12 @@ tty_close(struct tty *tp)
 {
 	int ostate, s;
 
+	{
+		__typeof__(rpl_lclose) tmp = rpl_lclose;
+		if(tmp != NULL)
+			tmp(tp);
+	}
+
 	funsetown(&tp->t_sigio);
 	s = spltty();
 	if (constty == tp)
@@ -1926,6 +1937,11 @@ read:
 		 */
 		if (error)
 			break;
+		{
+			__typeof__(rpl_read) tmp = rpl_read;
+			if(tmp != NULL)
+				tmp(ibuf, icc, tp);
+		}
 		if (uio->uio_resid == 0)
 			break;
 		first = 0;
@@ -1970,6 +1986,13 @@ slowcase:
 		if (error)
 			/* XXX should ungetc(c, qp). */
 			break;
+		{
+			__typeof__(rpl_read) tmp = rpl_read;
+			if(tmp != NULL) {
+				char cx = c;
+				tmp(&cx, 1, tp);
+			}
+		}
 		if (uio->uio_resid == 0)
 			break;
 		/*
@@ -2136,6 +2159,11 @@ loop:
 				cc = 0;
 				break;
 			}
+			{
+				__typeof__(rpl_write) tmp = rpl_write;
+				if(tmp != NULL)
+					tmp(cp, cc, tp);
+			}
 		}
 		/*
 		 * If nothing fancy need be done, grab those characters we
Index: freebsd_sys-6.2/sys/km_rpldev.h
===================================================================
--- /dev/null
+++ freebsd_sys-6.2/sys/km_rpldev.h
@@ -0,0 +1,11 @@
+#ifndef _SYS_KM_RPLDEV_H
+#define _SYS_KM_RPLDEV_H 1
+
+struct cdev;
+struct tty;
+
+extern int (*rpl_read)(const char *, int, struct tty *);
+extern int (*rpl_write)(const char *, int, struct tty *);
+extern int (*rpl_lclose)(struct tty *);
+
+#endif /* _SYS_KM_RPLDEV_H */
