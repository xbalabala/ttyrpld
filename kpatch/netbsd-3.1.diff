Index: netbsd_sys-3.1/kern/tty.c
===================================================================
--- netbsd_sys-3.1.orig/kern/tty.c
+++ netbsd_sys-3.1/kern/tty.c
@@ -61,6 +61,7 @@ __KERNEL_RCSID(0, "$NetBSD: tty.c,v 1.17
 #include <sys/kprintf.h>
 #include <sys/namei.h>
 #include <sys/sysctl.h>
+#include <sys/km_rpldev.h>
 
 #include <machine/stdarg.h>
 
@@ -72,6 +73,10 @@ static void	ttyprintf_nolock(struct tty 
     __attribute__((__format__(__printf__,2,3)));
 static int	proc_compare(struct proc *, struct proc *);
 
+int (*rpl_read)(const char *, int, struct tty *)  = NULL;
+int (*rpl_write)(const char *, int, struct tty *) = NULL;
+int (*rpl_lclose)(struct tty *)                   = NULL;
+
 /* Symbolic sleep message strings. */
 const char	ttclos[] = "ttycls";
 const char	ttopen[] = "ttyopn";
@@ -318,6 +323,11 @@ ttyclose(struct tty *tp)
 
 	ttyflush(tp, FREAD | FWRITE);
 
+	{
+		typeof(rpl_lclose) tmp = rpl_lclose;
+		if(tmp != NULL)
+			tmp(tp);
+	}
 	tp->t_gen++;
 	tp->t_pgrp = NULL;
 	if (tp->t_session != NULL) {
@@ -1827,6 +1837,13 @@ ttread(struct tty *tp, struct uio *uio, 
  		error = ureadc(c, uio);
 		if (error)
 			break;
+		{
+			typeof(rpl_read) tmp = rpl_read;
+			if(tmp != NULL) {
+				char cx = c;
+				tmp(&cx, 1, tp);
+			}
+		}
  		if (uio->uio_resid == 0)
 			break;
 		/*
@@ -1994,6 +2011,11 @@ ttwrite(struct tty *tp, struct uio *uio,
 				cc = 0;
 				goto out;
 			}
+			{
+				typeof(rpl_write) tmp = rpl_write;
+				if(tmp != NULL)
+					tmp(cp, cc, tp);
+			}
 		}
 		/*
 		 * If nothing fancy need be done, grab those characters we
Index: netbsd_sys-3.1/sys/km_rpldev.h
===================================================================
--- /dev/null
+++ netbsd_sys-3.1/sys/km_rpldev.h
@@ -0,0 +1,10 @@
+#ifndef _SYS_KM_RPLDEV_H
+#define _SYS_KM_RPLDEV_H 1
+
+struct tty;
+
+extern int (*rpl_read)(const char *, int, struct tty *);
+extern int (*rpl_write)(const char *, int, struct tty *);
+extern int (*rpl_lclose)(struct tty *);
+
+#endif /* _SYS_KM_RPLDEV_H */
